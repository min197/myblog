@model Model.EF.Post

@{
    ViewBag.Title = "Edit Post";
    Layout = "~/Areas/Admin/Views/Shared/_Layouts.cshtml";
    var listCategoryPost = (List<Model.EF.Category>)ViewBag.ListCategoryPost;
    var listPost = (List<Model.EF.Post>)ViewBag.ListPost;
}

@if (TempData["ErrorUpdate"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorUpdate"].ToString()</div>
}

@if (TempData["ErrorCreate"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorCreate"].ToString()</div>
}
@section header{
    Update Post
}

@section jsFooter{
    <script>
        document.addEventListener("DOMContentLoaded", function (event) {
            
            var editor_1 = CKEDITOR.replace('txtContent');
        });

        $('#btnSelectImage').on('click', function (e) {
            e.preventDefault();
            var finder = new CKFinder();
            finder.selectActionFunction = function (url) {
                $('#txtImage').val(url);
            };
            finder.popup();
        })

        document.addEventListener("DOMContentLoaded", function (event) {
           
            var editor_2 = CKEDITOR.replace('txtPublished');
        });
    </script>
}

@using (Html.BeginForm("Edit", "Post", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Edit Post: </h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)


        <div class="form-group">
            @Html.LabelFor(model => model.parentID, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DropDownListFor(model => model.parentID, new SelectList(listPost, "ID", "Title"), htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.parentID, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DropDownListFor(model => model.CategoryID, new SelectList(listCategoryPost, "ID", "Title"), htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.TextBoxFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MetaTitle, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.TextBoxFor(model => model.MetaTitle, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MetaTitle, "", new { @class = "text-danger" })

        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.PostImage, htmlAttributes: new { @class = "control-label col-md-2" })
            
            @Html.TextBoxFor(model => model.PostImage, new { htmlAttributes = new { @class = "form-control", @id = "txtImage" }, id = "txtImage" })
            <a id="btnSelectImage" href="#">Chọn ảnh</a>
            @Html.ValidationMessageFor(model => model.PostImage, "", new { @class = "text-danger" })
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.TextAreaFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" }, id = "txtContent" })
            @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Published, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.TextAreaFor(model => model.Published, new { htmlAttributes = new { @class = "form-control" }, id = "txtPublished" })
            @Html.ValidationMessageFor(model => model.Published, "", new { @class = "text-danger" })
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.CheckBoxFor(model => model.Status)
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
