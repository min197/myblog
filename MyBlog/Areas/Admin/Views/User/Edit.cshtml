@model Model.EF.User

@{
    ViewBag.Title = "Update User";
    Layout = "~/Areas/Admin/Views/Shared/_Layouts.cshtml";
}

@section header{
    Update User
}

@section jsFooter{
    <script>
        document.addEventListener("DOMContentLoaded", function (event) {

            var editor_1 = CKEDITOR.replace('txtProfile');
        });

        $('#btnSelectImage').on('click', function (e) {
            e.preventDefault();
            var finder = new CKFinder();
            finder.selectActionFunction = function (url) {
                $('#txtAvatar').val(url);
            };
            finder.popup();
        })

    </script>
}

@if (TempData["ErrorUpdate"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorUpdate"].ToString()</div>
}

@using (Html.BeginForm("Edit", "User", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Avatar, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.TextBoxFor(model => model.Avatar, new { htmlAttributes = new { @class = "form-control", @id = "txtAvatar" }, id = "txtAvatar" })
            <a id="btnSelectImage" href="#">Chọn ảnh</a>
            @Html.ValidationMessageFor(model => model.Avatar, "", new { @class = "text-danger" })
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.TextBoxFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.TypeUserId, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.TextBoxFor(model => model.TypeUserId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TypeUserId, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.TextBoxFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MidName, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.TextBoxFor(model => model.MidName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MidName, "", new { @class = "text-danger" })
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.TextBoxFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.TextBoxFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.TextBoxFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PasswordHash, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.PasswordFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Adress, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.TextBoxFor(model => model.Adress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Adress, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.JobTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.TextBoxFor(model => model.JobTitle, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.About, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.TextBoxFor(model => model.About, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.About, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LinkToFacebook, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.TextBoxFor(model => model.LinkToFacebook, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LinkToFacebook, "", new { @class = "text-danger" })
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.LinkToInstagram, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.TextBoxFor(model => model.LinkToInstagram, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LinkToInstagram, "", new { @class = "text-danger" })
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.LinkToTwitter, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.TextBoxFor(model => model.LinkToTwitter, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LinkToTwitter, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LinkToYoutube, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.TextBoxFor(model => model.LinkToYoutube, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LinkToYoutube, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Profile, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.TextAreaFor(model => model.Profile, new { htmlAttributes = new { @class = "form-control" }, id = "txtProfile" })
            @Html.ValidationMessageFor(model => model.Profile, "", new { @class = "text-danger" })
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.CheckBoxFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-primary btn-user" />
            </div>
        </div>
    </div>
}

